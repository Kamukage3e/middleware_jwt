name: Works

on:
  push:
    branches: ["**"]

jobs:
  parallel:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        option: ["a", "b"]
    outputs:
      results: ${{ steps.collect-artifacts.outputs.results }}
    steps:
      - uses: actions/checkout@v3
      - name: Create output
        run: echo "${{ matrix.option }} processed" > result-${{ matrix.option }}.txt
      - name: Upload result file
        uses: actions/upload-artifact@v2
        with:
          name: result-${{ matrix.option }}
          path: result-${{ matrix.option }}.txt
      - name: Collect artifact names
        id: collect-artifacts
        run: echo "::set-output name=results::${{ matrix.option }}"

  gather-results:
    needs: parallel
    runs-on: ubuntu-latest
    strategy:
      matrix:
        option: ${{ fromJson(needs.parallel.outputs.results) }}

    steps:
      - name: Download result
        uses: actions/download-artifact@v2
        with:
          name: result-${{ matrix.option }}
          path: ./artifacts
      - name: Verify download result
        run: ls -l ./artifacts/result-${{ matrix.option }}.txt
      - name: Show result
        run: |
          echo "Content of result-${{ matrix.option }}.txt:"
          cat ./artifacts/result-${{ matrix.option }}.txt

  final-aggregation:
    needs: gather-results
    runs-on: ubuntu-latest
    steps:
      - name: Aggregate results
        run: |
          echo "Aggregated results:"
          for file in ./artifacts/*; do
            echo "Content of $file:"
            cat $file
      - name: Deploy (example step)
        run: echo "Deploying application with the aggregated results..."
