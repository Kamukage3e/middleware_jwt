name: Works

on:
  push:
    branches: ["**"]

jobs:
  parallel:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        option: ["a", "b"]
    outputs:
      result: ${{ steps.set-output.outputs.result }}
    steps:
      - name: Create output
        id: create-output
        run: echo "${{ matrix.option }}" > result.txt
      - name: Upload result file
        uses: actions/upload-artifact@v2
        with:
          name: result-${{ matrix.option }}
          path: result.txt
      - name: Set output
        id: set-output
        run: echo "::set-output name=result::${{ matrix.option }}"

  gather-results:
    needs: parallel
    runs-on: ubuntu-latest
    steps:
      - name: Download all results
        uses: actions/download-artifact@v2
        with:
          name: result-*
          path: ./artifacts
      - name: Aggregate results
        id: aggregate-results
        run: |
          results=$(ls ./artifacts/result-* | xargs cat | jq -R -s -c 'split("\n") | map(select(. != ""))')
          echo "results=$results" >> $GITHUB_ENV
      - name: Set aggregated output
        run: echo "::set-output name=results::${{ env.results }}"

  finally:
    needs: [parallel, gather-results]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        option: ${{ fromJson(needs.gather-results.outputs.results) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Debug
        run: echo '${{ matrix.option }}'
